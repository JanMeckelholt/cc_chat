docker search node
docker pull node

--Dockerfile--
FROM node

COPY . /root/
CMD cd /root/ && npm start
---

docker build -t socketio_jan .docker 
docker run -p 80:3000 socketio_jan

build:
t: tag (name)

run:
t: pseudo TTY
i: interactiv
p: portforewarding host:container
v: volume mounten (volumename:volumepfad)
d: daemon //unendliche Laufzeit

docker inspect <Dockerid>
docker run -p 27017:27017 -v db:/data/db -d mongo


Application Definition & Build

docker-compose build
docker-compose up



---
FROM node
WORKDIR /root/
COPY package*.json ./
RUN npm install
COPY . /root/
EXPOSE 8888
CMD cd /root/ && node app.js 

docker build -t jan_04_callback .
docker run -p 8888:8888 jan_04_callback
---

docker run -it -P -v "$(pwd):/root/" jan_04_callback /bin/bash // dockerfile ohne Sourcecode kopieren und dann aus container starten

docker run -ti -v "$(pwd):/root" node bin/bash

xxxx (1. Container mongo auf Alias "datadb" - 2. Container node mit Zugriff auf ersten Container)
docker run -d --network testdbaccess --network-alias datadb -v testdb:/data/db mongo //->Alias in findDocs.js: const url = 'mongodb://datadb:27017';

docker run -it --network testdbaccess nicolaka/netshoot
ping datadb
dig datadb

docker run -ti --network testdbaccess -v "$(pwd):/root" node /bin/bash
xxxx
